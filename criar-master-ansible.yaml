---
- name: Provisionar Instância EC2 para Master Ansible
  hosts: localhost
  gather_facts: no
  collections:
    - amazon.aws
  vars:
    ec2_key_name: "master-ansible-key"
    ec2_instance_type: "t2.micro"
    ec2_image: "ami-04b70fa74e45c3917"  # Substituir pelo ID da AMI Linux desejada
    ec2_volume_size: 10
    region: "us-east-1"
    user_data_template: |
      #!/bin/bash
      echo "Atualizando e instalando dependências..."
      sudo apt-get update -y
      sudo apt-get upgrade -y
      sudo apt-get install -y git vim unzip ansible-core python3 python3-pip

      echo "Instalando boto3 e botocore..."
      sudo apt-get install -y python3-boto3 python3-botocore

      echo "Instalando AWS CLI..."
      curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
      unzip awscliv2.zip
      sudo ./aws/install

      echo "Instalando coleções Ansible Galaxy..."
      ansible-galaxy collection install amazon.aws
      ansible-galaxy collection install community.aws

      echo "Clonando repositório do GitHub..."
      sudo -u ubuntu git clone https://github.com/giovanni-gava/iac-mack.git /home/ubuntu/iac-mack

      echo "Configurando credenciais da AWS..."
      sudo mkdir -p /home/ubuntu/.aws
      cat <<EOF | sudo tee /home/ubuntu/.aws/credentials
      [default]
      AWS_ACCESS_KEY_ID=x
      AWS_SECRET_ACCESS_KEY=x
      AWS_DEFAULT_REGION=x
      EOF
      sudo chown ubuntu:ubuntu /home/ubuntu/.aws/credentials
      sudo chmod 600 /home/ubuntu/.aws/credentials

      echo "Configuração concluída com sucesso!"
  tasks:
    - name: Criar par de chaves
      amazon.aws.ec2_key:
        name: "{{ ec2_key_name }}"
        region: "{{ region }}"
        state: present
      register: ec2_key

    - name: Salvar chave privada no diretório home do usuário executante
      copy:
        content: "{{ ec2_key.key.private_key }}"
        dest: "{{ lookup('env', 'HOME') }}/{{ ec2_key_name }}.pem"
        mode: '0600'
      when: ec2_key.key.private_key is defined

    - name: Remover variável EC2_KEY_NAME existente do .bashrc
      lineinfile:
        path: ~/.bashrc
        state: absent
        regexp: '^export EC2_KEY_NAME='

    - name: Exportar nome da key pair para .bashrc
      lineinfile:
        path: ~/.bashrc
        line: "export EC2_KEY_NAME={{ ec2_key_name }}"
        create: yes

    - name: Criar grupo de segurança
      amazon.aws.ec2_group:
        name: "master-ansible-sg"
        description: "Security group for master-ansible"
        rules:
          - proto: tcp
            ports:
              - 22
            cidr_ip: 0.0.0.0/0
          - proto: tcp
            ports:
              - 80
            cidr_ip: 0.0.0.0/0
        state: present
        region: "{{ region }}"
      register: sg

    - name: Lançar instância EC2
      amazon.aws.ec2_instance:
        name: "master-ansible"
        key_name: "{{ ec2_key_name }}"
        instance_type: "{{ ec2_instance_type }}"
        image_id: "{{ ec2_image }}"
        wait: yes
        volumes:
          - device_name: /dev/sda1
            ebs:
              volume_size: "{{ ec2_volume_size }}"
        network:
          assign_public_ip: yes
        security_groups: ["master-ansible-sg"]
        user_data: "{{ user_data_template }}"
        region: "{{ region }}"
      register: ec2

    - name: Aguardar a inicialização da instância EC2
      wait_for:
        host: "{{ ec2.instances[0].public_ip_address }}"
        port: 22
        state: started
        timeout: 300

    - name: Depurar detalhes da instância EC2
      debug:
        var: ec2

    - name: Variáveis de ambiente carregadas com sucesso!
      debug:
        msg: "Variáveis de ambiente carregadas com sucesso!"
