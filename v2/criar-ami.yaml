---
- name: Criar AMI a partir de instância EC2
  hosts: localhost
  gather_facts: no
  collections:
    - amazon.aws
  tasks:
    - name: Carregar variáveis de ambiente do .bashrc
      shell: /bin/bash -c "source ~/.bashrc && env"
      register: shell_output

    - name: Setar variáveis de ambiente
      set_fact:
        instance_id: "{{ shell_output.stdout_lines | select('search', '^EC2_INSTANCE_ID=') | list | first | split('=') | last }}"
        region: "{{ lookup('ini', 'AWS_DEFAULT_REGION section=default file=~/.aws/credentials') }}"

    - name: Aguardar até que a instância esteja no estado 'running' ou 'stopped'
      amazon.aws.ec2_instance_info:
        instance_ids: "{{ instance_id }}"
        region: "{{ region }}"
      register: instance_info
      until: instance_info.instances[0].state in ['running', 'stopped']
      retries: 10
      delay: 30

    - name: Criar AMI da instância
      amazon.aws.ec2_ami:
        instance_id: "{{ instance_id }}"
        region: "{{ region }}"
        name: "webserver-ami"
        state: present
        wait: yes
      register: ami

    - name: Exibir detalhes da AMI criada
      debug:
        var: ami

    - name: Remover variável AMI_ID existente do .bashrc
      lineinfile:
        path: ~/.bashrc
        state: absent
        regexp: '^export AMI_ID='

    - name: Exportar AMI ID para .bashrc
      lineinfile:
        path: ~/.bashrc
        line: "export AMI_ID={{ ami.image_id }}"
        create: yes

    - name: Carregar novas variáveis de ambiente do .bashrc
      shell: /bin/bash -c "source ~/.bashrc"

    - name: Variáveis de ambiente carregadas com sucesso!
      debug:
        msg: "AMI_ID: {{ lookup('env', 'AMI_ID') }}"
