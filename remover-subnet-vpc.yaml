---
- name: Remover VPC e Subnet na AWS
  hosts: localhost
  gather_facts: no
  vars:
    region: us-east-1

  tasks:
    - name: Carregar vari치veis de ambiente do .bashrc
      shell: source ~/.bashrc
      register: env_vars

    - name: Obter VPC ID do ambiente
      set_fact:
        vpc_id: "{{ lookup('env', 'VPC_ID') }}"

    - name: Obter Subnet ID do ambiente
      set_fact:
        subnet_id: "{{ lookup('env', 'SUBNET_ID') }}"

    - name: Verificar VPC ID carregado
      debug:
        msg: "VPC ID carregado: {{ vpc_id }}"

    - name: Verificar Subnet ID carregado
      debug:
        msg: "Subnet ID carregado: {{ subnet_id }}"

    - name: Remover Subnet
      amazon.aws.ec2_vpc_subnet:
        vpc_id: "{{ vpc_id }}"
        subnet_id: "{{ subnet_id }}"
        region: "{{ region }}"
        state: absent
      when: subnet_id is defined and subnet_id != ""

    - name: Subnet removida com sucesso!
      debug:
        msg: "Subnet removida com sucesso! ID: {{ subnet_id }}"

    - name: Remover VPC
      amazon.aws.ec2_vpc_net:
        vpc_id: "{{ vpc_id }}"
        region: "{{ region }}"
        state: absent
      when: vpc_id is defined and vpc_id != ""

    - name: VPC removida com sucesso!
      debug:
        msg: "VPC removida com sucesso! ID: {{ vpc_id }}"

    - name: Remover VPC_ID do .bashrc
      lineinfile:
        path: ~/.bashrc
        state: absent
        regexp: '^export VPC_ID='

    - name: Remover SUBNET_ID do .bashrc
      lineinfile:
        path: ~/.bashrc
        state: absent
        regexp: '^export SUBNET_ID='

    - name: Remover SUBNET_CIDR do .bashrc
      lineinfile:
        path: ~/.bashrc
        state: absent
        regexp: '^export SUBNET_CIDR='

    - name: Carregar novas vari치veis de ambiente do .bashrc
      shell: source ~/.bashrc

    - name: Vari치veis de ambiente removidas com sucesso!
      debug:
        msg: "Vari치veis de ambiente removidas com sucesso!"

    - name: Playbook completo
      debug:
        msg: "O playbook foi executado com sucesso!"

