---
- name: Criar VPC e Subnet na AWS
  hosts: localhost
  gather_facts: no
  vars:
    region: us-east-1
    vpc_cidr: "10.0.0.0/16"
    subnet_cidr: "10.0.1.0/24"
  tasks:
    - name: Criar VPC
      amazon.aws.ec2_vpc_net:
        name: minha_vpc
        cidr_block: "{{ vpc_cidr }}"
        region: "{{ region }}"
        state: present
      register: vpc

    - name: VPC criada com sucesso!
      debug:
        var: vpc

    - name: Criar Subnet
      amazon.aws.ec2_vpc_subnet:
        vpc_id: "{{ vpc.vpc.id }}"
        cidr: "{{ subnet_cidr }}"
        region: "{{ region }}"
        state: present
      register: subnet

    - name: Subnet criada com sucesso!
      debug:
        var: subnet

    - name: Criar Internet Gateway
      amazon.aws.ec2_vpc_igw:
        state: present
      register: igw

    - name: Verificar criação do Internet Gateway
      debug:
        var: igw

    - name: Anexar Internet Gateway à VPC
      amazon.aws.ec2_vpc_igw:
        vpc_id: "{{ vpc.vpc.id }}"
        internet_gateway_id: "{{ igw.gateway_id }}"
        state: present
      when: igw.gateway_id is defined

    - name: Obter a tabela de roteamento principal da VPC
      amazon.aws.ec2_vpc_route_table_info:
        filters:
          - name: vpc-id
            values: ["{{ vpc.vpc.id }}"]
          - name: association.main
            values: ["true"]
      register: route_tables

    - name: Depurar tabela de roteamento
      debug:
        var: route_tables

    - name: Criar rota para o tráfego de saída na tabela de roteamento principal
      amazon.aws.ec2_vpc_route_table:
        route_table_id: "{{ route_tables.route_tables[0].route_table_id }}"
        vpc_id: "{{ vpc.vpc.id }}"
        region: "{{ region }}"
        routes:
          - dest: 0.0.0.0/0
            gateway_id: "{{ igw.gateway_id }}"
        state: present

    - name: Remover VPC_ID existente do .bashrc
      lineinfile:
        path: ~/.bashrc
        state: absent
        regexp: '^export VPC_ID='

    - name: Exportar VPC ID para .bashrc
      lineinfile:
        path: ~/.bashrc
        line: "export VPC_ID={{ vpc.vpc.id }}"
        create: yes

    - name: VPC ID exportado com sucesso!
      debug:
        msg: "VPC ID exportado com sucesso para .bashrc!"

    - name: Remover SUBNET_ID existente do .bashrc
      lineinfile:
        path: ~/.bashrc
        state: absent
        regexp: '^export SUBNET_ID='

    - name: Exportar Subnet ID para .bashrc
      lineinfile:
        path: ~/.bashrc
        line: "export SUBNET_ID={{ subnet.subnet.id }}"
        create: yes

    - name: Subnet ID exportado com sucesso!
      debug:
        msg: "Subnet ID exportado com sucesso para .bashrc!"

    - name: Remover SUBNET_CIDR existente do .bashrc
      lineinfile:
        path: ~/.bashrc
        state: absent
        regexp: '^export SUBNET_CIDR='

    - name: Exportar Subnet CIDR para .bashrc
      lineinfile:
        path: ~/.bashrc
        line: "export SUBNET_CIDR={{ subnet_cidr }}"
        create: yes

    - name: Subnet CIDR exportado com sucesso!
      debug:
        msg: "Subnet CIDR exportado com sucesso para .bashrc!"

    - name: Carregar novas variáveis de ambiente do .bashrc
      shell: source ~/.bashrc

    - name: Variáveis de ambiente carregadas com sucesso!
      debug:
        msg: "Variáveis de ambiente carregadas com sucesso!"

    - name: Playbook completo
      debug:
        msg: "O playbook foi executado com sucesso!"
